# Android APK build toolchain file.
# This toolchain file differs from most others and should not be seen as an example.
# This is because the android NDK has a perfectly usable toolchain file already,
# and thus we use that.
# This file just facilitates in setting up the SDK/NDK if we do not have it yet.


# We need the following things:
# - Android SDK, with:
#   - build-tools (aapt, dx, zipalign)
#   - platform/android-{target_api} (for android.jar)
# - java JDK with:
#   - javac compiler for java 8 
#   - jarsigner
# - SDL2 build with the toolchain
# - a signing key
# This toolchain file is designed to setup everything if it's not supplied by the user, with the exception of the java JDK

set(ANDROID_SDK_PATH "" CACHE PATH "Location of the android SDK installation.")
set(ANDROID_API_MIN "16" CACHE STRING "Minimal API version for android build, any device below this version is not supported.")
set(ANDROID_API_TARGET "26" CACHE STRING "Targeting API version for android, any features above this version cannot be used.")
# Signing key to use to sign the APK. You can generate one with:
#       keytool -genkey -alias ${ANDROID_SIGN_KEY_NAME} -keyalg RSA -keysize 2048 -validity 10000
set(ANDROID_SIGN_KEY_NAME "Android" CACHE STRING "Which key to use to sign the final APK for android")
set(ANDROID_SIGN_KEY_PASSWORD "password" CACHE STRING "Password that is used to protect the key. NOTE: This is stored in the cache, so readable for anyone with access to the drive where you run this.")


#################################################################################

# Configuration options for the NDK CMake toolchain file.
set(ANDROID_ABI "armeabi-v7a")
set(ANDROID_PLATFORM "android-${ANDROID_API_MIN}")

find_program(UNZIP unzip)
find_program(PATCH patch)

find_package(Java 1.8 COMPONENTS Development JarSigner REQUIRED)

if(CMAKE_HOST_WIN32)
    set(HOST_EXE ".exe")
    set(HOST_BAT ".bat")
endif()

function(execute_process_ex)
    execute_process(${ARGV} RESULT_VARIABLE RES)
    if(RES)
        message(FATAL_ERROR "Failed to execute: ${ARGV}")
    endif()
endfunction()

if(ANDROID_SDK_PATH STREQUAL "")
    set(ANDROID_SDK_PATH "${CMAKE_CURRENT_LIST_DIR}/android/sdk/")
    set(ANDROID_BUILD_TOOLS_VERSION "29.0.0")
    if(NOT EXISTS "${ANDROID_SDK_PATH}/cmdline-tools/bin/sdkmanager${HOST_BAT}")
        file(WRITE "${ANDROID_SDK_PATH}/licenses/android-sdk-license" "24333f8a63b6825ea9c5514f83c2829b004d1fee")
        if(CMAKE_HOST_WIN32)
            file(DOWNLOAD https://dl.google.com/android/repository/commandlinetools-win-6858069_latest.zip "${ANDROID_SDK_PATH}/sdk-tools.zip" SHOW_PROGRESS)
        else()
            file(DOWNLOAD https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip "${ANDROID_SDK_PATH}/sdk-tools.zip" SHOW_PROGRESS)
        endif()
        execute_process_ex(COMMAND ${UNZIP} sdk-tools.zip WORKING_DIRECTORY "${ANDROID_SDK_PATH}")
    endif()
    if(NOT EXISTS "${ANDROID_SDK_PATH}/platforms/android-${ANDROID_API_TARGET}")
        execute_process_ex(COMMAND "${ANDROID_SDK_PATH}/cmdline-tools/bin/sdkmanager${HOST_BAT}" "--sdk_root=${ANDROID_SDK_PATH}" "platforms\;android-${ANDROID_API_TARGET}")
    endif()
    if(NOT EXISTS "${ANDROID_SDK_PATH}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}")
        execute_process_ex(COMMAND "${ANDROID_SDK_PATH}/cmdline-tools/bin/sdkmanager${HOST_BAT}" "--sdk_root=${ANDROID_SDK_PATH}" "build-tools\;${ANDROID_BUILD_TOOLS_VERSION}")
    endif()
    if(NOT EXISTS "${ANDROID_SDK_PATH}/ndk-bundle")
        execute_process_ex(COMMAND "${ANDROID_SDK_PATH}/cmdline-tools/bin/sdkmanager${HOST_BAT}" "--sdk_root=${ANDROID_SDK_PATH}" "ndk-bundle")
    endif()
    if(NOT EXISTS "${ANDROID_SDK_PATH}/platform-tools")
        execute_process_ex(COMMAND "${ANDROID_SDK_PATH}/cmdline-tools/bin/sdkmanager${HOST_BAT}" "--sdk_root=${ANDROID_SDK_PATH}" "platform-tools")
    endif()
else()
    file(GLOB ANDROID_BUILD_TOOLS_VERSION LIST_DIRECTORIES true "${ANDROID_SDK_PATH}/build-tools/*.*.*")
    get_filename_component(ANDROID_BUILD_TOOLS_VERSION "${ANDROID_BUILD_TOOLS_VERSION}" NAME)
    if(NOT EXISTS "${ANDROID_SDK_PATH}/platforms/android-${ANDROID_API_TARGET}")
        message(FATAL_ERROR "Missing android platform in supplied android SDK: android-${ANDROID_API_TARGET}")
    endif()
endif()
set(AAPT "${ANDROID_SDK_PATH}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/aapt")
set(DX "${ANDROID_SDK_PATH}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/dx${HOST_BAT}")
set(ZIPALIGN "${ANDROID_SDK_PATH}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/zipalign")
set(ANDROID_PLATFORM_JAR "${ANDROID_SDK_PATH}/platforms/android-${ANDROID_API_TARGET}/android.jar")
set(ADB "${ANDROID_SDK_PATH}/platform-tools/adb")

set(SDL_SRC_PATH "${CMAKE_CURRENT_LIST_DIR}/android/SDL/source")
set(SDL_INSTALL_PATH "${CMAKE_CURRENT_LIST_DIR}/android/SDL/install")
if(NOT EXISTS "${SDL_SRC_PATH}")
    file(DOWNLOAD https://www.libsdl.org/release/SDL2-2.0.9.zip "${CMAKE_CURRENT_LIST_DIR}/android/SDL/SDL2_src.zip" SHOW_PROGRESS)
    execute_process_ex(COMMAND ${UNZIP} SDL2_src.zip WORKING_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/android/SDL")
    file(RENAME "${CMAKE_CURRENT_LIST_DIR}/android/SDL/SDL2-2.0.9" "${CMAKE_CURRENT_LIST_DIR}/android/SDL/source")
    execute_process_ex(COMMAND ${PATCH} -p1 -i "${CMAKE_CURRENT_LIST_DIR}/../android/sdl2.patch" WORKING_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/android/SDL/source")
endif()
if(NOT EXISTS "${SDL_INSTALL_PATH}")
    file(MAKE_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/android/SDL/build")
    execute_process_ex(
        COMMAND "${CMAKE_COMMAND}" "${SDL_SRC_PATH}" "-G" "Ninja"
            "-DCMAKE_TOOLCHAIN_FILE=${ANDROID_SDK_PATH}/ndk-bundle/build/cmake/android.toolchain.cmake"
            "-DANDROID_ABI=${ANDROID_ABI}" "-DANDROID_PLATFORM=${ANDROID_PLATFORM}" "-DCMAKE_INSTALL_PREFIX=${SDL_INSTALL_PATH}" "-DCMAKE_BUILD_TYPE=Release"
            "-DCMAKE_SHARED_LINKER_FLAGS_RELEASE=-s"
        WORKING_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/android/SDL/build")
    execute_process_ex(
        COMMAND "ninja" "install"
        WORKING_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/android/SDL/build")
endif()
set(SDL2_DIR "${SDL_INSTALL_PATH}/lib/cmake/SDL2")

include("${ANDROID_SDK_PATH}/ndk-bundle/build/cmake/android.toolchain.cmake")
# We need to add a small thing here, or else the compiler checks fail, as those run with less configuration options enabled.
list(APPEND CMAKE_TRY_COMPILE_PLATFORM_VARIABLES ANDROID_SDK_PATH)
add_compile_options(-ffunction-sections -fdata-sections -fvisibility=hidden -fvisibility-inlines-hidden)
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT "${CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT} -Wl,--gc-sections -fvisibility=hidden -fvisibility-inlines-hidden -s")
